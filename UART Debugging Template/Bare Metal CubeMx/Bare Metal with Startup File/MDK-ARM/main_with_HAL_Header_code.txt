#include "stm32c031xx.h"

void SysClock_Config(void)
{
	RCC->CR |= RCC_CR_HSEON;
	while (!(RCC->CR & RCC_CR_HSERDY));
	
	RCC->APBENR1 |= RCC_APBENR1_PWREN;
	
	FLASH->ACR |= FLASH_ACR_ICEN | FLASH_ACR_LATENCY_0;
	
	RCC->CFGR |= RCC_CFGR_SW_0;
	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSE);
}

void GPIO_Config(void)
{
	RCC->IOPENR |= RCC_IOPENR_GPIOAEN;
	
	GPIOA->MODER &= ~GPIO_MODER_MODE5;  
	GPIOA->MODER |= GPIO_MODER_MODE5_0;  
	
	GPIOA->OTYPER &= ~GPIO_OTYPER_OT5;  
	GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED5;  
	GPIOA->PUPDR &= ~GPIO_PUPDR_PUPD5;  
}	

void Timer_Config(void)
{
	RCC->APBENR1 |= RCC_APBENR1_TIM3EN;
	
	TIM3->ARR = 0xfff - 1;
	TIM3->PSC = 48 - 1;
	TIM3->CR1 = 0;
	TIM3->CR1 |= TIM_CR1_CEN;
	
	while (!(TIM3->SR & TIM_SR_UIF));
}

void delay_us(uint32_t us) 
{
	TIM3->CNT = 0;
	while (TIM3->CNT < us);
}

void delay_ms(uint32_t ms)
{
	for (uint16_t i = 0; i < ms; i++)
	{
		delay_us(1000);
	}
}

void UART2_Config(void)
{
	GPIOA->MODER &= ~(GPIO_MODER_MODE2 | GPIO_MODER_MODE3);
	GPIOA->MODER |= GPIO_MODER_MODE2_1 | GPIO_MODER_MODE3_1;
	GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED2 | GPIO_OSPEEDR_OSPEED3;
	GPIOA->AFR[0] |= GPIO_AFRL_AFSEL2_0 | GPIO_AFRL_AFSEL3_0;
	
	RCC->APBENR1 |= RCC_APBENR1_USART2EN;
	
	USART2->CR1 = 0;
	
	USART2->CR1 &= ~(USART_CR1_M0 | USART_CR1_M1);
	
	USART2->CR2 &= ~USART_CR2_STOP;
	
	USART2->BRR = 417;
	
	USART2->CR2 &= ~USART_CR2_STOP;
	
	USART2->CR1 |= USART_CR1_UE;
	
	USART2->CR1 |= USART_CR1_TE | USART_CR1_RE;
}

void UART_TX_CHAR(char letter)
{
	while((USART2->ISR & USART_ISR_TXE) == 0);
	
	USART2->TDR = 0x000000ff & letter;
}

void UART_TX(char* message)
{
	while(*message)
	{
		UART_TX_CHAR(*message++);
	}
	
	while ((USART2->ISR & USART_ISR_TC) == 0);
}

int main()
{
	SysClock_Config();
	GPIO_Config();
	Timer_Config();
	UART2_Config();
	
	UART_TX("Hello World!\r\n");

	while(1)
	{
		GPIOA->BSRR |= GPIO_BSRR_BS5;
		delay_ms(1000);
		GPIOA->BSRR |= GPIO_BSRR_BR5;
		delay_ms(1000);
	}
}